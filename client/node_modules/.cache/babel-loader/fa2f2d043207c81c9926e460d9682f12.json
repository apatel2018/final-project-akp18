{"ast":null,"code":"import _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport MarketAdminContract from \"./contracts/MarketAdmin.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isAdmin: 0,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              alert(\"loaded accounts\" + accounts); // Get the contract instance.\n\n              Contract = truffleContract(MarketAdminContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 12;\n              return Contract.deployed();\n\n            case 12:\n              instance = _context.sent;\n\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.runExample);\n\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + _context.t0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 16]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Stores a given value, 5 by default.\n\n              _context2.next = 3;\n              return contract.addAdmin(accounts[0], {\n                from: accounts[0]\n              });\n\n            case 3:\n              _context2.next = 5;\n              return contract.isAdmin.call();\n\n            case 5:\n              response = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                isAdmin: response\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          accounts = _this$state2.accounts,\n          contract = _this$state2.contract;\n      var value = 302;\n      alert(\"Setting storage value to \" + value);\n      alert(\"Account is  \" + accounts[0]);\n      contract.set(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        return contract.get.call();\n      }).then(function (result) {\n        _this2.setState({\n          isAdmin: result.toNumber()\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.web3) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Welcome to online MarketPlace!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Set Storage\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"The stored value is: \", this.state.isAdmin));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/App.js"],"names":["React","Component","MarketAdminContract","getWeb3","truffleContract","App","state","isAdmin","web3","accounts","contract","componentDidMount","eth","getAccounts","alert","Contract","setProvider","currentProvider","deployed","instance","setState","runExample","console","log","addAdmin","from","call","response","event","value","set","then","result","get","toNumber","handleClick","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,IAAI,EAAE,IAApB;AAA0BC,MAAAA,QAAQ,EAAE,IAApC;AAA0CC,MAAAA,QAAQ,EAAE;AAApD,K;UAERC,iB;;;;6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGGR,OAAO,EAHV;;AAAA;AAGVK,cAAAA,IAHU;AAAA;AAAA,qBAMOA,IAAI,CAACI,GAAL,CAASC,WAAT,EANP;;AAAA;AAMVJ,cAAAA,QANU;AAQrBK,cAAAA,KAAK,CACE,oBAAoBL,QADtB,CAAL,CARqB,CAYhB;;AACMM,cAAAA,QAbU,GAaCX,eAAe,CAACF,mBAAD,CAbhB;AAehBa,cAAAA,QAAQ,CAACC,WAAT,CAAqBR,IAAI,CAACS,eAA1B;AAfgB;AAAA,qBAiBOF,QAAQ,CAACG,QAAT,EAjBP;;AAAA;AAiBVC,cAAAA,QAjBU;;AAoBhB;AACA;AACA,oBAAKC,QAAL,CAAc;AAAEZ,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,QAAQ,EAARA,QAAR;AAAkBC,gBAAAA,QAAQ,EAAES;AAA5B,eAAd,EAAsD,MAAKE,UAA3D;;AAtBgB;AAAA;;AAAA;AAAA;AAAA;AAyBhB;AACAP,cAAAA,KAAK,CACH,sFADG,CAAL;AAGAQ,cAAAA,OAAO,CAACC,GAAR;;AA7BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;UAiCpBF,U;;;;6BAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoB,MAAKf,KADzB,EACHG,QADG,eACHA,QADG,EACOC,QADP,eACOA,QADP,EAGX;;AAHW;AAAA,qBAILA,QAAQ,CAACc,QAAT,CAAkBf,QAAQ,CAAC,CAAD,CAA1B,EAA+B;AAAEgB,gBAAAA,IAAI,EAAEhB,QAAQ,CAAC,CAAD;AAAhB,eAA/B,CAJK;;AAAA;AAAA;AAAA,qBAOYC,QAAQ,CAACH,OAAT,CAAiBmB,IAAjB,EAPZ;;AAAA;AAOLC,cAAAA,QAPK;;AASX;AACA,oBAAKP,QAAL,CAAc;AAAEb,gBAAAA,OAAO,EAAEoB;AAAX,eAAd;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;gCAaHC,K,EACZ;AAAA;;AAAA,yBACiC,KAAKtB,KADtC;AAAA,UACUG,QADV,gBACUA,QADV;AAAA,UACoBC,QADpB,gBACoBA,QADpB;AAGE,UAAImB,KAAK,GAAG,GAAZ;AAEEf,MAAAA,KAAK,CACD,8BAA8Be,KAD7B,CAAL;AAIAf,MAAAA,KAAK,CACD,iBAAiBL,QAAQ,CAAC,CAAD,CADxB,CAAL;AAKIC,MAAAA,QAAQ,CAACoB,GAAT,CAAaD,KAAb,EAAoB;AAACJ,QAAAA,IAAI,EAAGhB,QAAQ,CAAC,CAAD;AAAhB,OAApB,EACCsB,IADD,CACM,UAAAC,MAAM,EAAI;AACd,eAAOtB,QAAQ,CAACuB,GAAT,CAAaP,IAAb,EAAP;AACD,OAHD,EAICK,IAJD,CAIM,UAAAC,MAAM,EAAI;AACpB,QAAA,MAAI,CAACZ,QAAL,CAAc;AAAEb,UAAAA,OAAO,EAAEyB,MAAM,CAACE,QAAP;AAAX,SAAd;AACK,OAND;AAOP;;;6BAEU;AACP,UAAI,CAAC,KAAK5B,KAAL,CAAWE,IAAhB,EAAsB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAP;AACD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAK2B,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFI,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA2B,KAAK9B,KAAL,CAAWC,OAAtC,CALF,CADF;AASD;;;;EAtFeN,S;;AAyFlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport MarketAdminContract from \"./contracts/MarketAdmin.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { isAdmin: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\talert(\n        `loaded accounts` + accounts\n      \t);\n\n      // Get the contract instance.\n      const Contract = truffleContract(MarketAdminContract);\n\n      Contract.setProvider(web3.currentProvider);\n\n      const instance = await Contract.deployed();\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n      console.log(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.addAdmin(accounts[0], { from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.isAdmin.call();\n\n    // Update state with the result.\n    this.setState({ isAdmin: response });\n  };\n\nhandleClick(event)\n{\n  const { accounts, contract } = this.state;\n\t\n  var value = 302\n  \n    alert(\n        `Setting storage value to ` + value\n      \t);\n\n    alert(\n        `Account is  ` + accounts[0]\n      \t);\n\n\n        contract.set(value, {from : accounts[0]})\n        .then(result => {         \n          return contract.get.call()\n        })\n        .then(result => {      \n\t   this.setState({ isAdmin: result.toNumber() }); \n        })\n}\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Welcome to online MarketPlace!</h1>\n \t<p>\n\t   <button onClick={this.handleClick.bind(this)}>Set Storage</button>\n\t</p>\n        <div>The stored value is: {this.state.isAdmin}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}