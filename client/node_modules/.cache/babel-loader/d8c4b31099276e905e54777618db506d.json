{"ast":null,"code":"import _defineProperty from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/components/Shopper.js\";\nimport React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\nvar Shopper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Shopper, _React$Component);\n\n  function Shopper(props) {\n    var _this;\n\n    _classCallCheck(this, Shopper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Shopper).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                _this.runExample();\n\n                _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleChangeMngStore = _this.handleChangeMngStore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n              } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, _PendingStores, _ApprovedStores, _SelectList, counter, _StoreFrontIds, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, userObject, _StoreFront;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract;\n              _PendingStores = [];\n              _ApprovedStores = [];\n              _SelectList = [];\n              counter = 0;\n              alert(\"Account no is \" + accounts[0]); // Get all storefront ids from the contract.\n\n              _context2.next = 8;\n              return contract.getStoreFrontIds.call({\n                from: accounts[0]\n              });\n\n            case 8:\n              _StoreFrontIds = _context2.sent;\n              alert(\"Total store count is:\" + _StoreFrontIds);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 13;\n              _iterator = _StoreFrontIds[Symbol.iterator]();\n\n            case 15:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              userObject = _step.value;\n              _context2.next = 19;\n              return contract.getStoreFrontbyId.call(userObject, {\n                from: accounts[0]\n              });\n\n            case 19:\n              _StoreFront = _context2.sent;\n\n              if (_StoreFront[3]) {\n                if (counter == 0) {\n                  _this.state.selectstorevalue = _StoreFront[0];\n                  counter += 1;\n                }\n\n                _ApprovedStores.push(_StoreFront[0]);\n\n                _SelectList.push({\n                  Name: _StoreFront[0],\n                  Id: userObject\n                });\n              } //Create the parent and add the children\n\n\n              _PendingStores.push(_StoreFront[0]);\n\n            case 22:\n              _iteratorNormalCompletion = true;\n              _context2.next = 15;\n              break;\n\n            case 25:\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](13);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 31:\n              _context2.prev = 31;\n              _context2.prev = 32;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 34:\n              _context2.prev = 34;\n\n              if (!_didIteratorError) {\n                _context2.next = 37;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 37:\n              return _context2.finish(34);\n\n            case 38:\n              return _context2.finish(31);\n\n            case 39:\n              // Update state with the result.\n              _this.setState({\n                ApprovedStores: _ApprovedStores,\n                SelectList: _SelectList,\n                ProductList: []\n              });\n\n              _this.RefreshProductList();\n\n            case 41:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[13, 27, 31, 39], [32,, 34, 38]]);\n    }));\n    _this.state = {\n      storefrontvalue: [],\n      ApprovedStores: [],\n      SelectList: [],\n      ProductList: [],\n      web3: _this.props.web3,\n      accounts: _this.props.accounts,\n      contract: _this.props.contract\n    };\n    return _this;\n  }\n\n  _createClass(Shopper, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleChangeMngStore\",\n    value: function handleChangeMngStore(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n      this.setState({\n        welcomevalue: ''\n      });\n    }\n  }, {\n    key: \"handleSubmitMngStore\",\n    value: function () {\n      var _handleSubmitMngStore = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault(); //this.RefreshProductList();\n                //this.setState({ ProdNameEdit: '',ProdPriceEdit: '',ProdQtyEdit: ''});  \n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function handleSubmitMngStore(_x) {\n        return _handleSubmitMngStore.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state2 = this.state,\n          accounts = _this$state2.accounts,\n          contract = _this$state2.contract;\n      var value = this.state.storefrontvalue;\n      alert(\"Adding a new Store Front \" + value);\n      contract.createStoreFront(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        _this2.runExample();\n\n        _this2.forceUpdate();\n      });\n      this.setState({\n        storefrontvalue: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionItems = this.state.SelectList.map(function (stores) {\n        return React.createElement(\"option\", {\n          key: stores.Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, stores.Name);\n      });\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"You are logged in as SHOPPER\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Manage Approved Stores\"), React.createElement(\"select\", {\n        onChange: this.handleChangeMngStore.bind(this),\n        ref: \"selectstorevalue\",\n        name: \"selectstorevalue\",\n        value: this.state.selectstorevalue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, optionItems), React.createElement(\"button\", {\n        onClick: this.handleSubmitMngStore.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Manage\")));\n    }\n  }]);\n\n  return Shopper;\n}(React.Component);\n\nexport default Shopper;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/components/Shopper.js"],"names":["React","Component","truffleContract","Shopper","props","componentDidMount","runExample","handleSubmit","bind","handleChangeMngStore","error","alert","state","accounts","contract","_PendingStores","_ApprovedStores","_SelectList","counter","getStoreFrontIds","call","from","_StoreFrontIds","userObject","getStoreFrontbyId","_StoreFront","selectstorevalue","push","Name","Id","setState","ApprovedStores","SelectList","ProductList","RefreshProductList","storefrontvalue","web3","event","target","name","value","welcomevalue","preventDefault","createStoreFront","then","result","forceUpdate","optionItems","map","stores","handleSubmitMngStore"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\n\nclass Shopper extends React.Component {\nconstructor(props) {\n    super(props);\n\n    this.state = { storefrontvalue: [] ,ApprovedStores: [], SelectList: [] ,ProductList: [], web3: this.props.web3, accounts: this.props.accounts, contract: this.props.contract };\n   \n   }\n\n\n  componentDidMount = async () => {\n  try {\n\n\n\n      this.runExample();\n      \n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleChangeMngStore = this.handleChangeMngStore.bind(this);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n    }\n  };\n\n  runExample = async () => {\n\n\n    const { accounts, contract } = this.state;\n    let _PendingStores = [];\n    let _ApprovedStores = [];\n    let _SelectList = [];\n    let counter = 0;\n \n    alert(\n        `Account no is ` + accounts[0] \n      \t); \n\n    // Get all storefront ids from the contract.\n    const _StoreFrontIds = await contract.getStoreFrontIds.call({ from: accounts[0] });\n    alert(\n        `Total store count is:` + _StoreFrontIds\n    );\n\n    for (let userObject of _StoreFrontIds) {\n\t\n      // Get the value from the contract to prove it worked.\n      const _StoreFront = await contract.getStoreFrontbyId.call(userObject, { from: accounts[0] });\n\n\tif(_StoreFront[3])\n        {\n\t  if(counter == 0)\n          {\n\t\tthis.state.selectstorevalue = _StoreFront[0];\n                counter += 1;\n           }\n\t  _ApprovedStores.push(_StoreFront[0] );\t\n          _SelectList.push({Name:_StoreFront[0] ,Id: userObject });\t\n        }\n\n         //Create the parent and add the children\n         _PendingStores.push(_StoreFront[0] );\n\n\n    }\n   \n    // Update state with the result.\n    this.setState({  ApprovedStores: _ApprovedStores, SelectList: _SelectList, ProductList: []});\n    this.RefreshProductList();\n  };\n\n handleChange(event) {\n\n     this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleChangeMngStore(event) {\n\n     this.setState({ [event.target.name]: event.target.value });\n     this.setState({ welcomevalue: ''});\n  }\n\n  async handleSubmitMngStore(event) {\n  event.preventDefault();\n  //this.RefreshProductList();\n   //this.setState({ ProdNameEdit: '',ProdPriceEdit: '',ProdQtyEdit: ''});  \n  }\n\n  handleSubmit(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.storefrontvalue;\n  \n    alert(\n        `Adding a new Store Front ` + value\n      \t);\n\n        contract.createStoreFront(value, {from : accounts[0]})\n        .then(result => {  \t\t\n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ storefrontvalue: ''});\n  }\n\n\n\n  render() {    \n   let optionItems = this.state.SelectList.map((stores) =>\n                <option key={stores.Id}>{stores.Name}</option>\n            );\n    return ( \t\n      <form onSubmit={this.handleSubmit.bind(this)}>\n\n       <h3>You are logged in as SHOPPER</h3>\n\t<div>\n        <label>\n          Manage Approved Stores\n        </label>  \n           <select onChange={this.handleChangeMngStore.bind(this)} ref=\"selectstorevalue\" name=\"selectstorevalue\" value={this.state.selectstorevalue} > \n               {optionItems}\n           </select>\n          <button onClick={this.handleSubmitMngStore.bind(this)}>Manage</button>\n         </div> \n\t</form>\t\n    );\n  }\n}\n\nexport default Shopper;\n"]},"metadata":{},"sourceType":"module"}