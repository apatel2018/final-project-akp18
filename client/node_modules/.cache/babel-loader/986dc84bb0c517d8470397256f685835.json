{"ast":null,"code":"import _defineProperty from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/components/StoreOwner.js\";\nimport React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\nvar StoreOwner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StoreOwner, _React$Component);\n\n  function StoreOwner(props) {\n    var _this;\n\n    _classCallCheck(this, StoreOwner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StoreOwner).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                _this.runExample();\n\n                _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleSubmitStrOwner = _this.handleSubmitStrOwner.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n              } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, _PendingStores, _ApprovedStores, _StoreBalance, _StoreFrontIds, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, userObject, _StoreFront;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract;\n              _PendingStores = [];\n              _ApprovedStores = []; // Get the value from the contract to prove it worked.\n\n              _context2.next = 5;\n              return contract.viewStoreBalance.call({\n                from: accounts[0]\n              });\n\n            case 5:\n              _StoreBalance = _context2.sent;\n              alert(\"Your store balance is:\" + _StoreBalance); // Get total storefront count from the contract.\n\n              _context2.next = 9;\n              return contract.getStoreFrontIds.call({\n                from: accounts[0]\n              });\n\n            case 9:\n              _StoreFrontIds = _context2.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 13;\n              _iterator = _StoreFrontIds[Symbol.iterator]();\n\n            case 15:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              userObject = _step.value;\n              _context2.next = 19;\n              return contract.getStoreFrontbyId.call(userObject, {\n                from: accounts[0]\n              });\n\n            case 19:\n              _StoreFront = _context2.sent;\n\n              //if(_StoreFront[3])\n              _ApprovedStores.push(_StoreFront[0]); //Create the parent and add the children\n\n\n              _PendingStores.push(_StoreFront[0]);\n\n            case 22:\n              _iteratorNormalCompletion = true;\n              _context2.next = 15;\n              break;\n\n            case 25:\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](13);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 31:\n              _context2.prev = 31;\n              _context2.prev = 32;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 34:\n              _context2.prev = 34;\n\n              if (!_didIteratorError) {\n                _context2.next = 37;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 37:\n              return _context2.finish(34);\n\n            case 38:\n              return _context2.finish(31);\n\n            case 39:\n              // Update state with the result.\n              _this.setState({\n                storefrontvalue: '',\n                StoreBalance: _StoreBalance,\n                PendingStores: _PendingStores,\n                ApprovedStores: _ApprovedStores\n              });\n\n            case 40:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[13, 27, 31, 39], [32,, 34, 38]]);\n    }));\n    _this.state = {\n      storefrontvalue: '',\n      StoreBalance: '',\n      Admins: [],\n      StoreOwners: [],\n      PendingStores: [],\n      ApprovedStores: [],\n      web3: _this.props.web3,\n      accounts: _this.props.accounts,\n      contract: _this.props.contract\n    };\n    return _this;\n  }\n\n  _createClass(StoreOwner, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state2 = this.state,\n          accounts = _this$state2.accounts,\n          contract = _this$state2.contract;\n      var value = this.state.storefrontvalue;\n      alert(\"Adding a new Store Front \" + value);\n      contract.createStoreFront(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        _this2.runExample();\n\n        _this2.forceUpdate();\n      });\n      this.setState({\n        storefrontvalue: '',\n        storeownervalue: ''\n      });\n    }\n  }, {\n    key: \"handleSubmitWithBalance\",\n    value: function handleSubmitWithBalance(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var _this$state3 = this.state,\n          accounts = _this$state3.accounts,\n          contract = _this$state3.contract;\n      var value = this.state.storeownervalue;\n      alert(\"Adding a new Store Owner \" + value);\n      contract.addStoreOwner(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        _this3.runExample();\n\n        _this3.forceUpdate();\n      });\n      this.setState({\n        storefrontvalue: '',\n        storeownervalue: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var storeownerlist = this.state.StoreOwners;\n      var adminlist = this.state.Admins;\n      var pendingstorelist = this.state.PendingStores;\n      var approvedstorelist = this.state.ApprovedStores;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"You are logged in as STORE OWNER\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Add a new Store Front:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"storefrontinput\",\n        name: \"storefrontvalue\",\n        value: this.state.storefrontvalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Store Name i.e. Walmart...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"List of Store Fronts:\"), pendingstorelist.map(function (pendingstorelist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, pendingstorelist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Manage Approved Stores:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"storeownerinput\",\n        name: \"storeownervalue\",\n        value: this.state.storeownervalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Store Owner Address...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleSubmitWithBalance.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"List of Store Owners:\"), approvedstorelist.map(function (approvedstorelist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, approvedstorelist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Withdraw Store Balance:\"), React.createElement(\"button\", {\n        onClick: this.handleSubmitWithBalance.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Withdraw\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StoreOwner;\n}(React.Component);\n\nexport default StoreOwner;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/components/StoreOwner.js"],"names":["React","Component","truffleContract","StoreOwner","props","componentDidMount","runExample","handleChange","bind","handleSubmit","handleSubmitStrOwner","error","alert","state","accounts","contract","_PendingStores","_ApprovedStores","viewStoreBalance","call","from","_StoreBalance","getStoreFrontIds","_StoreFrontIds","userObject","getStoreFrontbyId","_StoreFront","push","setState","storefrontvalue","StoreBalance","PendingStores","ApprovedStores","Admins","StoreOwners","web3","event","target","name","value","preventDefault","createStoreFront","then","result","forceUpdate","storeownervalue","addStoreOwner","storeownerlist","adminlist","pendingstorelist","approvedstorelist","map","index","handleSubmitWithBalance"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\n\nclass StoreOwner extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = { storefrontvalue: '', StoreBalance: '', Admins: [],StoreOwners: [],PendingStores: []  , ApprovedStores: [], web3: this.props.web3, accounts: this.props.accounts, contract: this.props.contract };\n    }\n\n\n  componentDidMount = async () => {\n  try {\n\n      this.runExample();\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleSubmitStrOwner = this.handleSubmitStrOwner.bind(this);\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n    let _PendingStores = [];\n    let _ApprovedStores = [];\n\n    // Get the value from the contract to prove it worked.\n    const _StoreBalance = await contract.viewStoreBalance.call({ from: accounts[0] });\n  alert(\n        `Your store balance is:` + _StoreBalance\n      );\n\n    // Get total storefront count from the contract.\n    const _StoreFrontIds = await contract.getStoreFrontIds.call({ from: accounts[0] });\n\n    for (let userObject of _StoreFrontIds) {\n\t\n      // Get the value from the contract to prove it worked.\n      const _StoreFront = await contract.getStoreFrontbyId.call(userObject, { from: accounts[0] });\n\n\t//if(_StoreFront[3])\n\t  _ApprovedStores.push(_StoreFront[0] );\t\n\n         //Create the parent and add the children\n         _PendingStores.push(_StoreFront[0] );\n\n    }\n   \n    // Update state with the result.\n    this.setState({ storefrontvalue: '',StoreBalance: _StoreBalance, PendingStores: _PendingStores, ApprovedStores: _ApprovedStores});\n\n  };\n\n\n  handleChange(event) {\n\n     this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.storefrontvalue;\n  \n    alert(\n        `Adding a new Store Front ` + value\n      \t);\n\n        contract.createStoreFront(value, {from : accounts[0]})\n        .then(result => {  \t\t\n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ storefrontvalue: '',storeownervalue: ''});\n  }\n\n  handleSubmitWithBalance(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.storeownervalue;\n  \n    alert(\n        `Adding a new Store Owner ` + value\n      \t);\n\n        contract.addStoreOwner(value, {from : accounts[0]})\n        .then(result => {         \n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ storefrontvalue: '',storeownervalue: ''});\n\n  }\n\n\n  render() {\n\n    var storeownerlist = this.state.StoreOwners;\n    var adminlist = this.state.Admins;\n    var pendingstorelist = this.state.PendingStores;\n    var approvedstorelist = this.state.ApprovedStores;\n\n    return ( \t\n      <form onSubmit={this.handleSubmit.bind(this)}>\n\n       <h3>You are logged in as STORE OWNER</h3>\n       <p>\n        <label>\n          Add a new Store Front:\n          <input type=\"text\" ref=\"storefrontinput\" name=\"storefrontvalue\" value={this.state.storefrontvalue} onChange={this.handleChange} placeholder=\"Enter Store Name i.e. Walmart...\"/>\n        </label>\n        <button type=\"submit\">Add</button>\n\t</p>\n\t<ul> \t\n\t\t<div id=\"result\">List of Store Fronts:</div>\n                {pendingstorelist.map(function(pendingstorelist, index){\n                    return <li key={ index }>{pendingstorelist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n    \t<p>\n        <label>\n          Manage Approved Stores:\n          <input type=\"text\" ref=\"storeownerinput\" name=\"storeownervalue\" value={this.state.storeownervalue} onChange={this.handleChange} placeholder=\"Enter Store Owner Address...\"/>\n        </label>\n        <button onClick={this.handleSubmitWithBalance.bind(this)}>Add</button>\n\t</p>\n\t   <ul> \t\n\t\t<div id=\"result\">List of Store Owners:</div>\n                {approvedstorelist.map(function(approvedstorelist, index){\n                    return <li key={ index }>{approvedstorelist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n\n    \t<p>\n        <label>\n          Withdraw Store Balance:           \n        </label>\n        <button onClick={this.handleSubmitWithBalance.bind(this)}>Withdraw</button>\n\t</p>  \n\t <br/>\t\n      </form>\t\n    );\n  }\n}\nexport default StoreOwner;\n"]},"metadata":{},"sourceType":"module"}