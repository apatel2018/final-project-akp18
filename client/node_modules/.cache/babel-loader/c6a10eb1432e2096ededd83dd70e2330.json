{"ast":null,"code":"import _defineProperty from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/components/Owner.js\";\nimport React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\nvar Owner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Owner, _React$Component);\n\n  function Owner(props) {\n    var _this;\n\n    _classCallCheck(this, Owner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Owner).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                _this.runExample();\n\n                _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n              } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, _Admins;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Get the value from the contract to prove it worked.\n\n              _context2.next = 3;\n              return contract.getAdmins.call({\n                from: accounts[0]\n              });\n\n            case 3:\n              _Admins = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                adminvalue: '',\n                Admins: _Admins\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      adminvalue: '',\n      storeownervalue: '',\n      storeapprvalue: '',\n      Admins: [],\n      web3: _this.props.web3,\n      accounts: _this.props.accounts,\n      contract: _this.props.contract\n    };\n    return _this;\n  }\n\n  _createClass(Owner, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state2 = this.state,\n          accounts = _this$state2.accounts,\n          contract = _this$state2.contract;\n      var value = this.state.adminvalue;\n\n      if (!value) {\n        alert(\"Address can't be empty \" + value);\n      } else {\n        alert(\"Adding a new admin \" + value);\n        contract.addAdmin(value, {\n          from: accounts[0]\n        }).then(function (result) {\n          _this2.runExample();\n\n          _this2.forceUpdate();\n        });\n        this.setState({\n          adminvalue: '',\n          storeownervalue: ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var adminlist = this.state.Admins;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"You are logged in as OWNER\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add a new Admin:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"admininput\",\n        name: \"adminvalue\",\n        value: this.state.adminvalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Admin Address...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"List of Admins:\"), adminlist.map(function (adminlist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, adminlist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Owner;\n}(React.Component);\n\nexport default Owner;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/components/Owner.js"],"names":["React","Component","truffleContract","Owner","props","componentDidMount","runExample","handleChange","bind","handleSubmit","error","alert","state","accounts","contract","getAdmins","call","from","_Admins","setState","adminvalue","Admins","storeownervalue","storeapprvalue","web3","event","target","name","value","preventDefault","addAdmin","then","result","forceUpdate","adminlist","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\n\nclass Owner extends React.Component {\n\nconstructor(props) {\n    super(props);\n    this.state = { adminvalue: '', storeownervalue: '',storeapprvalue: '' , Admins: [] ,web3: this.props.web3, accounts: this.props.accounts, contract: this.props.contract };\n    }\n\n\n  componentDidMount = async () => {\n  try {\n\n      this.runExample();\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    \n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n  \n    // Get the value from the contract to prove it worked.\n    const _Admins = await contract.getAdmins.call({ from: accounts[0] });\n\n   \n    // Update state with the result.\n    this.setState({ adminvalue: '',Admins: _Admins});\n\n  };\n\n\n  handleChange(event) {\n\n     this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.adminvalue;\n    if(!value)\n  {\n   alert(\n        `Address can't be empty ` + value\n      \t);\n   }\n   else{\n    alert(\n        `Adding a new admin ` + value\n      \t);\n\n        contract.addAdmin(value, {from : accounts[0]})\n        .then(result => {  \t\t\n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ adminvalue: '',storeownervalue: ''});\n}\n  }\n\n\n\n  render() {\n\n    var adminlist = this.state.Admins;\n\n    return ( \t\n      <form onSubmit={this.handleSubmit.bind(this)}>\n\n       <h3>You are logged in as OWNER</h3>\n       <p>\n        <label>\n          Add a new Admin:\n          <input type=\"text\" ref=\"admininput\" name=\"adminvalue\" value={this.state.adminvalue} onChange={this.handleChange} placeholder=\"Enter Admin Address...\"/>\n        </label>\n        <button type=\"submit\">Add</button>\n\t</p>\n\t<ul> \t\n\t\t<div id=\"result\">List of Admins:</div>\n                {adminlist.map(function(adminlist, index){\n                    return <li key={ index }>{adminlist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n      </form>\t\n    );\n  }\n}\nexport default Owner;\n"]},"metadata":{},"sourceType":"module"}