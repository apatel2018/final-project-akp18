{"ast":null,"code":"import _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport MarketAdminContract from \"./contracts/MarketAdmin.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, Contract, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              alert(\"loaded accounts - \" + accounts[0]); // Get the contract instance.\n\n              Contract = truffleContract(MarketAdminContract);\n              Contract.setProvider(web3.currentProvider);\n              _context.next = 12;\n              return Contract.deployed();\n\n            case 12:\n              instance = _context.sent;\n\n              // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.runExample);\n\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + _context.t0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 16]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; //alert(\n              //`Adding a new admin - ` + '0x83ce6378f3d863f90c279e960550daa12bbba59b'\n              //);\n              // Stores a given value, 5 by default.\n              //await contract.addAdmin('0x83ce6378f3d863f90c279e960550daa12bbba59b', { from: accounts[0] });\n\n              alert(\"Admin added successfully\"); // Get the value from the contract to prove it worked.\n\n              _context2.next = 4;\n              return contract.isAdmin.call(accounts[0], {\n                from: accounts[0]\n              });\n\n            case 4:\n              response = _context2.sent;\n              alert(\"IsAdmin?\" + response); // Update state with the result.\n\n              _this.setState({\n                isAdmin: response\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.state = {\n      value: '',\n      isAdmin: false,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Welcome to online MarketPlace!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Set Storage\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Is this admin?: \", this.state.isAdmin)), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/App.js"],"names":["React","Component","MarketAdminContract","getWeb3","truffleContract","App","props","componentDidMount","web3","eth","getAccounts","accounts","alert","Contract","setProvider","currentProvider","deployed","instance","setState","contract","runExample","console","log","state","isAdmin","call","from","response","value","handleChange","bind","handleSubmit","event","target","preventDefault","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MarketAdminContract from \"./contracts/MarketAdmin.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport truffleContract from \"truffle-contract\";\n\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '',isAdmin: false, web3: null, accounts: null, contract: null };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\talert(\n        `loaded accounts - ` + accounts[0]\n      \t);\n\n      // Get the contract instance.\n      const Contract = truffleContract(MarketAdminContract);\n\n      Contract.setProvider(web3.currentProvider);\n\n      const instance = await Contract.deployed();\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n      console.log(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n\t//alert(\n        //`Adding a new admin - ` + '0x83ce6378f3d863f90c279e960550daa12bbba59b'\n      \t//);\n\n    // Stores a given value, 5 by default.\n    //await contract.addAdmin('0x83ce6378f3d863f90c279e960550daa12bbba59b', { from: accounts[0] });\n\n\talert(\n        `Admin added successfully`\n      \t);\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.isAdmin.call(accounts[0] , { from: accounts[0] });\n\n\talert(\n        `IsAdmin?` + response\n      \t);\n\n    // Update state with the result.\n    this.setState({ isAdmin: response });\n  };\n\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n<div className=\"App\">\n        <h1>Welcome to online MarketPlace!</h1>\n \t<p>\n\t   <button onClick={this.handleClick.bind(this)}>Set Storage</button>\n\t</p>\n        <div>Is this admin?: {this.state.isAdmin}</div>\n      </div>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}