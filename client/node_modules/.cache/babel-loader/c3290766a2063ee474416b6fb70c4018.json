{"ast":null,"code":"import _defineProperty from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/avani/final-project-akp18/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/avani/final-project-akp18/client/src/components/StoreOwner.js\";\nimport React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\nvar StoreOwner =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StoreOwner, _React$Component);\n\n  function StoreOwner(props) {\n    var _this;\n\n    _classCallCheck(this, StoreOwner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StoreOwner).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                _this.runExample();\n\n                _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n                _this.handleSubmitStrOwner = _this.handleSubmitStrOwner.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n              } catch (error) {\n                // Catch any errors for any of the above operations.\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\" + error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, _PendingStores, _ApprovedStores, _Admins, _StoreOwners, _StoreFrontIds, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, userObject, _StoreFront;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract;\n              _PendingStores = [];\n              _ApprovedStores = []; // Get the value from the contract to prove it worked.\n\n              _context2.next = 5;\n              return contract.getAdmins.call({\n                from: accounts[0]\n              });\n\n            case 5:\n              _Admins = _context2.sent;\n              _context2.next = 8;\n              return contract.getStoreOwners.call({\n                from: accounts[0]\n              });\n\n            case 8:\n              _StoreOwners = _context2.sent;\n              _context2.next = 11;\n              return contract.getStoreFrontIds.call({\n                from: accounts[0]\n              });\n\n            case 11:\n              _StoreFrontIds = _context2.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 15;\n              _iterator = _StoreFrontIds[Symbol.iterator]();\n\n            case 17:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 28;\n                break;\n              }\n\n              userObject = _step.value;\n              alert(\"Your store IDs are:\" + userObject); // Get the value from the contract to prove it worked.\n\n              _context2.next = 22;\n              return contract.getStoreFrontbyId.call(userObject, {\n                from: accounts[0]\n              });\n\n            case 22:\n              _StoreFront = _context2.sent;\n              if (_StoreFront[3]) __ApprovedStores.push(_StoreFront[0]); //Create the parent and add the children\n\n              _PendingStores.push(_StoreFront[0]);\n\n            case 25:\n              _iteratorNormalCompletion = true;\n              _context2.next = 17;\n              break;\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](15);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 34:\n              _context2.prev = 34;\n              _context2.prev = 35;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 37:\n              _context2.prev = 37;\n\n              if (!_didIteratorError) {\n                _context2.next = 40;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 40:\n              return _context2.finish(37);\n\n            case 41:\n              return _context2.finish(34);\n\n            case 42:\n              // Update state with the result.\n              _this.setState({\n                storefrontvalue: '',\n                storeownervalue: '',\n                Admins: _Admins,\n                StoreOwners: _StoreOwners,\n                PendingStores: _PendingStores,\n                ApprovedStores: _ApprovedStores\n              });\n\n            case 43:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[15, 30, 34, 42], [35,, 37, 41]]);\n    }));\n    _this.state = {\n      storefrontvalue: '',\n      storeownervalue: '',\n      Admins: [],\n      StoreOwners: [],\n      PendingStores: [],\n      ApprovedStores: [],\n      web3: _this.props.web3,\n      accounts: _this.props.accounts,\n      contract: _this.props.contract\n    };\n    return _this;\n  }\n\n  _createClass(StoreOwner, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state2 = this.state,\n          accounts = _this$state2.accounts,\n          contract = _this$state2.contract;\n      var value = this.state.storefrontvalue;\n      alert(\"Adding a new Store Front \" + value);\n      contract.createStoreFront(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        _this2.runExample();\n\n        _this2.forceUpdate();\n      });\n      this.setState({\n        storefrontvalue: '',\n        storeownervalue: ''\n      });\n    }\n  }, {\n    key: \"handleSubmitStrOwner\",\n    value: function handleSubmitStrOwner(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var _this$state3 = this.state,\n          accounts = _this$state3.accounts,\n          contract = _this$state3.contract;\n      var value = this.state.storeownervalue;\n      alert(\"Adding a new Store Owner \" + value);\n      contract.addStoreOwner(value, {\n        from: accounts[0]\n      }).then(function (result) {\n        _this3.runExample();\n\n        _this3.forceUpdate();\n      });\n      this.setState({\n        storefrontvalue: '',\n        storeownervalue: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var storeownerlist = this.state.StoreOwners;\n      var adminlist = this.state.Admins;\n      var pendingstorelist = this.state.PendingStores;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"You are logged in as STORE OWNER\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Add a new Store Front:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"storefrontinput\",\n        name: \"storefrontvalue\",\n        value: this.state.storefrontvalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Store Name i.e. Walmart...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"List of Store Fronts:\"), pendingstorelist.map(function (pendingstorelist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, pendingstorelist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Managed Approved Stores:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"storeownerinput\",\n        name: \"storeownervalue\",\n        value: this.state.storeownervalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Store Owner Address...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleSubmitStrOwner.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"List of Store Owners:\"), storeownerlist.map(function (storeownerlist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, storeownerlist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Approve New Store Opening:\", React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"storeownerinput\",\n        name: \"storeownervalue\",\n        value: this.state.storeownervalue,\n        onChange: this.handleChange,\n        placeholder: \"Enter Store Number i.e 23...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleSubmitStrOwner.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"List of Pending Store Openings:\"), pendingstorelist.map(function (pendingstorelist, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, pendingstorelist);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StoreOwner;\n}(React.Component);\n\nexport default StoreOwner;","map":{"version":3,"sources":["/home/avani/final-project-akp18/client/src/components/StoreOwner.js"],"names":["React","Component","truffleContract","StoreOwner","props","componentDidMount","runExample","handleChange","bind","handleSubmit","handleSubmitStrOwner","error","alert","state","accounts","contract","_PendingStores","_ApprovedStores","getAdmins","call","from","_Admins","getStoreOwners","_StoreOwners","getStoreFrontIds","_StoreFrontIds","userObject","getStoreFrontbyId","_StoreFront","__ApprovedStores","push","setState","storefrontvalue","storeownervalue","Admins","StoreOwners","PendingStores","ApprovedStores","web3","event","target","name","value","preventDefault","createStoreFront","then","result","forceUpdate","addStoreOwner","storeownerlist","adminlist","pendingstorelist","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport truffleContract from \"truffle-contract\";\n\n\nclass StoreOwner extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = { storefrontvalue: '', storeownervalue: '', Admins: [],StoreOwners: [],PendingStores: []  , ApprovedStores: [], web3: this.props.web3, accounts: this.props.accounts, contract: this.props.contract };\n    }\n\n\n  componentDidMount = async () => {\n  try {\n\n      this.runExample();\n      \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleSubmitStrOwner = this.handleSubmitStrOwner.bind(this);\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.` + error\n      );\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n    let _PendingStores = [];\n    let _ApprovedStores = [];\n\n    // Get the value from the contract to prove it worked.\n    const _Admins = await contract.getAdmins.call({ from: accounts[0] });\n\n\n    // Get the value from the contract to prove it worked.\n    const _StoreOwners = await contract.getStoreOwners.call({ from: accounts[0] });\n\n    // Get total storefront count from the contract.\n    const _StoreFrontIds = await contract.getStoreFrontIds.call({ from: accounts[0] });\n\n    for (let userObject of _StoreFrontIds) {\n\talert(\n        `Your store IDs are:` + userObject\n      );\n      // Get the value from the contract to prove it worked.\n      const _StoreFront = await contract.getStoreFrontbyId.call(userObject, { from: accounts[0] });\n\n\tif(_StoreFront[3])\n\t  __ApprovedStores.push(_StoreFront[0] );\t\n\n         //Create the parent and add the children\n         _PendingStores.push(_StoreFront[0] );\n\n    }\n   \n    // Update state with the result.\n    this.setState({ storefrontvalue: '',storeownervalue: '',Admins: _Admins, StoreOwners: _StoreOwners,PendingStores: _PendingStores, ApprovedStores: _ApprovedStores});\n\n  };\n\n\n  handleChange(event) {\n\n     this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.storefrontvalue;\n  \n    alert(\n        `Adding a new Store Front ` + value\n      \t);\n\n        contract.createStoreFront(value, {from : accounts[0]})\n        .then(result => {  \t\t\n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ storefrontvalue: '',storeownervalue: ''});\n  }\n\n  handleSubmitStrOwner(event) {\n\n  event.preventDefault();\n  const { accounts, contract } = this.state;\t\n  var value = this.state.storeownervalue;\n  \n    alert(\n        `Adding a new Store Owner ` + value\n      \t);\n\n        contract.addStoreOwner(value, {from : accounts[0]})\n        .then(result => {         \n\t\tthis.runExample();\n        \tthis.forceUpdate(); \n        });\n\tthis.setState({ storefrontvalue: '',storeownervalue: ''});\n\n  }\n\n\n\n  render() {\n\n    var storeownerlist = this.state.StoreOwners;\n    var adminlist = this.state.Admins;\n    var pendingstorelist = this.state.PendingStores;\n\n    return ( \t\n      <form onSubmit={this.handleSubmit.bind(this)}>\n\n       <h3>You are logged in as STORE OWNER</h3>\n       <p>\n        <label>\n          Add a new Store Front:\n          <input type=\"text\" ref=\"storefrontinput\" name=\"storefrontvalue\" value={this.state.storefrontvalue} onChange={this.handleChange} placeholder=\"Enter Store Name i.e. Walmart...\"/>\n        </label>\n        <button type=\"submit\">Add</button>\n\t</p>\n\t<ul> \t\n\t\t<div id=\"result\">List of Store Fronts:</div>\n                {pendingstorelist.map(function(pendingstorelist, index){\n                    return <li key={ index }>{pendingstorelist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n    \t<p>\n        <label>\n          Managed Approved Stores:\n          <input type=\"text\" ref=\"storeownerinput\" name=\"storeownervalue\" value={this.state.storeownervalue} onChange={this.handleChange} placeholder=\"Enter Store Owner Address...\"/>\n        </label>\n        <button onClick={this.handleSubmitStrOwner.bind(this)}>Add</button>\n\t</p>\n\t   <ul> \t\n\t\t<div id=\"result\">List of Store Owners:</div>\n                {storeownerlist.map(function(storeownerlist, index){\n                    return <li key={ index }>{storeownerlist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n\n    \t<p>\n        <label>\n          Approve New Store Opening: \n          <input type=\"text\" ref=\"storeownerinput\" name=\"storeownervalue\" value={this.state.storeownervalue} onChange={this.handleChange} placeholder=\"Enter Store Number i.e 23...\"/>\n        </label>\n        <button onClick={this.handleSubmitStrOwner.bind(this)}>Add</button>\n\t</p>\n\t<ul> \t\n\t\t<div id=\"result\">List of Pending Store Openings:</div>\n                {pendingstorelist.map(function(pendingstorelist, index){\n                    return <li key={ index }>{pendingstorelist}</li>;\n                  })}\n            </ul>       \n\t <br/>\n\n\t\n      </form>\t\n    );\n  }\n}\nexport default StoreOwner;\n"]},"metadata":{},"sourceType":"module"}